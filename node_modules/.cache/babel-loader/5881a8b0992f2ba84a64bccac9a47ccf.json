{"ast":null,"code":"import _slicedToArray from \"/Users/sunkyeonglee/Documents/GitRepo/sklee/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sunkyeonglee/Documents/GitRepo/sklee/todolist/src/Components/TodoCreate.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\nconst CircleButton = styled.button`\n    background: #38d9a9;\n    &:hover {\n        background: #63e6be;\n    }\n    &:active {\n        background: #20c997;\n    }\n\n    z-index: 5\n    cursor: pointer;\n    width: 80px;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    left: 50%;\n    bottom 0px;\n    transform: translate(-50%, 50%);\n\n    font-size: 60px;\n    color: white;\n    border-radius: 40px;\n\n    border: none;\n    outline: none;\n\n    transition: 0.125s all ease-in;\n    ${props => props.open && css`\n        background: #ff6b6b;\n        &:hover {\n            background: #ff8787;\n        }\n        &:active {\n            background: #fa5252;\n        }\n        transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\nconst InsertFormPositioner = styled.div`\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n`;\nconst InsertForm = styled.form`\n    background: #f8f9fa;\n    padding: 32px;\n    padding-bottom: 72px;\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    border-top: 1px solid #e9ecef;\n`;\nconst Input = styled.input`\n    padding: 12px;\n    border-radius: 4px;\n    border: 1px solid #dee2e6;\n    width: 100%;\n    outline: none;\n    font-size: 18px;\n    box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return React.createElement(React.Fragment, null, open && React.createElement(InsertFormPositioner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(InsertForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter\\uB97C \\uB204\\uB974\\uC138\\uC694\",\n    autoFocus: true,\n    onChange: onChange,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(CircleButton, {\n    onClick: onToggle,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(MdAdd, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })));\n}\n\nexport default TodoCreate;","map":{"version":3,"sources":["/Users/sunkyeonglee/Documents/GitRepo/sklee/todolist/src/Components/TodoCreate.js"],"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,gBAA/C;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8B7BC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAcP,GAAK;;;;;;;;;KAS5B;CAvCN;AA0CA,MAAMQ,oBAAoB,GAAGT,MAAM,CAACU,GAAI;;;;;CAAxC;AAOA,MAAMC,UAAU,GAAGX,MAAM,CAACY,IAAK;;;;;;;CAA/B;AASA,MAAMC,KAAK,GAAGb,MAAM,CAACc,KAAM;;;;;;;;CAA3B;;AAUA,SAASC,UAAT,GAAsB;AAAA,oBACMhB,QAAQ,CAAC,KAAD,CADd;AAAA;AAAA,QACXS,IADW;AAAA,QACLQ,OADK;;AAAA,qBAEOjB,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEXkB,KAFW;AAAA,QAELC,QAFK;;AAGlB,QAAMC,QAAQ,GAAGhB,eAAe,EAAhC;AACA,QAAMiB,MAAM,GAAGhB,aAAa,EAA5B;;AAEA,QAAMiB,QAAQ,GAAG,MAAML,OAAO,CAAC,CAACR,IAAF,CAA9B;;AACA,QAAMc,QAAQ,GAAIC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAhC;;AACA,QAAMQ,QAAQ,GAAGF,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACG,cAAF;AACAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAET,MAAM,CAACU,OADT;AAEFC,QAAAA,IAAI,EAAEd,KAFJ;AAGFe,QAAAA,IAAI,EAAE;AAHJ;AAFD,KAAD,CAAR;AAQAd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,MAAM,CAACU,OAAP,IAAkB,CAAlB;AACH,GAbD;;AAiBA,SACA,0CACCtB,IAAI,IAAK,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEiB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,WAAW,EAAG,+EADd;AAEA,IAAA,SAAS,MAFT;AAGA,IAAA,QAAQ,EAAEH,QAHV;AAIA,IAAA,KAAK,EAAEL,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADM,CADV,EAUA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEI,QAAvB;AAAiC,IAAA,IAAI,EAAEb,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVA,CADA;AAgBH;;AAED,eAAeO,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n    background: #38d9a9;\n    &:hover {\n        background: #63e6be;\n    }\n    &:active {\n        background: #20c997;\n    }\n\n    z-index: 5\n    cursor: pointer;\n    width: 80px;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    left: 50%;\n    bottom 0px;\n    transform: translate(-50%, 50%);\n\n    font-size: 60px;\n    color: white;\n    border-radius: 40px;\n\n    border: none;\n    outline: none;\n\n    transition: 0.125s all ease-in;\n    ${props => props.open && css `\n        background: #ff6b6b;\n        &:hover {\n            background: #ff8787;\n        }\n        &:active {\n            background: #fa5252;\n        }\n        transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n`;\n\nconst InsertForm = styled.form`\n    background: #f8f9fa;\n    padding: 32px;\n    padding-bottom: 72px;\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n    padding: 12px;\n    border-radius: 4px;\n    border: 1px solid #dee2e6;\n    width: 100%;\n    outline: none;\n    font-size: 18px;\n    box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n    const [open, setOpen] = useState(false);\n    const [value,setValue] = useState('');\n    const dispatch = useTodoDispatch();\n    const nextId = useTodoNextId();\n\n    const onToggle = () => setOpen(!open);\n    const onChange = (e) => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId.current,\n                text: value,\n                done: false,\n            }\n        });\n        setValue('');\n        setOpen(false);\n        nextId.current += 1;\n    };\n\n\n\n    return (\n    <>\n    {open && (<InsertFormPositioner>\n        <InsertForm onSubmit={onSubmit}>\n            <Input \n            placeholder = \"할 일을 입력 후, Enter를 누르세요\" \n            autoFocus \n            onChange={onChange}\n            value={value}/>\n        </InsertForm>\n    </InsertFormPositioner>)}\n    <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n    </CircleButton>\n    </>\n    );\n}\n\nexport default TodoCreate;"]},"metadata":{},"sourceType":"module"}